version: "3.8"

services:
  nodeapi_app:
    build:
      context: ./backend_nodeJs
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./backend_nodeJs:/app
      - "/app/node_modules"

  # mysql_server:
  #   image: mysql:latest
  #   container_name: ge
  #   volumes:
  #     #- container-volume:/var/lib/mysql
  #     - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: school
  #   ports:
  #     - "3306:3306"

  angular_app:
    build:
      context: ./FrontEnd_angular
      dockerfile: Dockerfile
    ports:
      - 4444:4444
    volumes:
      - ./FrontEnd_angular:/app
      - "/app/node_modules"
    environment:
      - NODE_ENV=development
    
    # command: bash -c "
    #   mysql use school;
    #   mysql SOURCE /DB/school_Data.sql;"


      

      # ------------------- All --------------- #
      #docker-compose -f "docker-compose.yml" up -d --build

      # ------------------- mysql and angular --------------- #
      # docker-compose -f "docker-compose.yml" up -d --build mysql_server angular_app

      # ------------------- express js --------------- #
      # docker-compose -f "docker-compose.yml" up -d --build nodeapi_app


      #docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag

      
      #docker exec -i some-mysql sh -c 'exec mysql -uroot -p"$MYSQL_ROOT_PASSWORD"' < /some/path/on/your/host/all-databases.sql
      #docker exec -i school_mysql sh -c 'exec mysql -uroot -p"password"' /school_Data.sql

      #docker push 
      # docker exec -it 'test' sh -c 'exec mysql -uroot -p"password"'
      #docker run --name some-mysql -v /my/custom:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag
      